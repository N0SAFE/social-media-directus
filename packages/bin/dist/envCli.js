#!/usr/bin/env node
"use strict";var j=Object.create;var N=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var K=Object.getPrototypeOf,Y=Object.prototype.hasOwnProperty;var b=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var L=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of x(t))!Y.call(e,a)&&a!==n&&N(e,a,{get:()=>t[a],enumerable:!(s=k(t,a))||s.enumerable});return e};var m=(e,t,n)=>(n=e!=null?j(K(e)):{},L(t||!e||!e.__esModule?N(n,"default",{value:e,enumerable:!0}):n,e));var V=b((ee,R)=>{R.exports={name:"dotenv",version:"16.4.5",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},funding:"https://dotenvx.com",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var T=b((te,u)=>{"use strict";var y=require("fs"),_=require("path"),S=require("os"),U=require("crypto"),W=V(),D=W.version,F=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function P(e){let t={},n=e.toString();n=n.replace(/\r\n?/mg,`
`);let s;for(;(s=F.exec(n))!=null;){let a=s[1],r=s[2]||"";r=r.trim();let o=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),o==='"'&&(r=r.replace(/\\n/g,`
`),r=r.replace(/\\r/g,"\r")),t[a]=r}return t}function B(e){let t=I(e),n=i.configDotenv({path:t});if(!n.parsed){let o=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw o.code="MISSING_DATA",o}let s=O(e).split(","),a=s.length,r;for(let o=0;o<a;o++)try{let c=s[o].trim(),l=q(n,c);r=i.decrypt(l.ciphertext,l.key);break}catch(c){if(o+1>=a)throw c}return i.parse(r)}function M(e){console.log(`[dotenv@${D}][INFO] ${e}`)}function C(e){console.log(`[dotenv@${D}][WARN] ${e}`)}function v(e){console.log(`[dotenv@${D}][DEBUG] ${e}`)}function O(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function q(e,t){let n;try{n=new URL(t)}catch(c){if(c.code==="ERR_INVALID_URL"){let l=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw l.code="INVALID_DOTENV_KEY",l}throw c}let s=n.password;if(!s){let c=new Error("INVALID_DOTENV_KEY: Missing key part");throw c.code="INVALID_DOTENV_KEY",c}let a=n.searchParams.get("environment");if(!a){let c=new Error("INVALID_DOTENV_KEY: Missing environment part");throw c.code="INVALID_DOTENV_KEY",c}let r=`DOTENV_VAULT_${a.toUpperCase()}`,o=e.parsed[r];if(!o){let c=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${r} in your .env.vault file.`);throw c.code="NOT_FOUND_DOTENV_ENVIRONMENT",c}return{ciphertext:o,key:s}}function I(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(let n of e.path)y.existsSync(n)&&(t=n.endsWith(".vault")?n:`${n}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=_.resolve(process.cwd(),".env.vault");return y.existsSync(t)?t:null}function w(e){return e[0]==="~"?_.join(S.homedir(),e.slice(1)):e}function G(e){M("Loading env from encrypted .env.vault");let t=i._parseVault(e),n=process.env;return e&&e.processEnv!=null&&(n=e.processEnv),i.populate(n,t,e),{parsed:t}}function J(e){let t=_.resolve(process.cwd(),".env"),n="utf8",s=!!(e&&e.debug);e&&e.encoding?n=e.encoding:s&&v("No encoding is specified. UTF-8 is used by default");let a=[t];if(e&&e.path)if(!Array.isArray(e.path))a=[w(e.path)];else{a=[];for(let l of e.path)a.push(w(l))}let r,o={};for(let l of a)try{let d=i.parse(y.readFileSync(l,{encoding:n}));i.populate(o,d,e)}catch(d){s&&v(`Failed to load ${l} ${d.message}`),r=d}let c=process.env;return e&&e.processEnv!=null&&(c=e.processEnv),i.populate(c,o,e),r?{parsed:o,error:r}:{parsed:o}}function Q(e){if(O(e).length===0)return i.configDotenv(e);let t=I(e);return t?i._configVault(e):(C(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),i.configDotenv(e))}function H(e,t){let n=Buffer.from(t.slice(-64),"hex"),s=Buffer.from(e,"base64"),a=s.subarray(0,12),r=s.subarray(-16);s=s.subarray(12,-16);try{let o=U.createDecipheriv("aes-256-gcm",n,a);return o.setAuthTag(r),`${o.update(s)}${o.final()}`}catch(o){let c=o instanceof RangeError,l=o.message==="Invalid key length",d=o.message==="Unsupported state or unable to authenticate data";if(c||l){let f=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw f.code="INVALID_DOTENV_KEY",f}else if(d){let f=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw f.code="DECRYPTION_FAILED",f}else throw o}}function z(e,t,n={}){let s=!!(n&&n.debug),a=!!(n&&n.override);if(typeof t!="object"){let r=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw r.code="OBJECT_REQUIRED",r}for(let r of Object.keys(t))Object.prototype.hasOwnProperty.call(e,r)?(a===!0&&(e[r]=t[r]),s&&v(a===!0?`"${r}" is already defined and WAS overwritten`:`"${r}" is already defined and was NOT overwritten`)):e[r]=t[r]}var i={configDotenv:J,_configVault:G,_parseVault:B,config:Q,decrypt:H,parse:P,populate:z};u.exports.configDotenv=i.configDotenv;u.exports._configVault=i._configVault;u.exports._parseVault=i._parseVault;u.exports.config=i.config;u.exports.decrypt=i.decrypt;u.exports.parse=i.parse;u.exports.populate=i.populate;u.exports=i});var E=m(require("process")),p=m(T()),h=m(require("fs")),$=require("child_process"),g=E.default.env.NODE_ENV||"development";h.default.existsSync(`.env.${g}`)?p.default.config({path:`.env.${g}`}):h.default.existsSync(`.env.${g}.local`)?p.default.config({path:`.env.${g}.local`}):h.default.existsSync(".env.local")?p.default.config({path:".env.local"}):p.default.config();var X=E.default.argv.slice(2),A=X.join(" ").split(/(\{[^{}]*\})/).map((e,t,n)=>e.startsWith("{")?`$${e}`:e.endsWith("$")&&n[t+1].startsWith("{")&&n[t+1].endsWith("}")?e.slice(0,-1):e).map(e=>e.startsWith("${")&&e.endsWith("}")?E.default.env[e.slice(2,-1)]:e).join("");if(!A)throw new Error("No command to run");(0,$.spawnSync)(A,{stdio:"inherit",shell:!0});
